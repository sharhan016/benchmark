plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.techiez.benchmark"
    compileSdk = 34
    ndkVersion = "28.0.12433566"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.techiez.benchmark"
        minSdk = 24
        targetSdk = 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    dependencies {
        // Ensure you have the correct dependencies for hardware properties
        implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.10"
        implementation "com.android.support:support-v4:28.0.0"
        implementation "androidx.core:core-ktx:1.6.0"
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }

    packagingOptions {
        pickFirst 'lib/arm64-v8a/libcpu_info.so'
        pickFirst 'lib/armeabi-v7a/libcpu_info.so'
        pickFirst 'lib/x86/libcpu_info.so'
        pickFirst 'lib/x86_64/libcpu_info.so'
    }
}

flutter {
    source = "../.."
}